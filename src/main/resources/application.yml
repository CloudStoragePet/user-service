server:
  port: 8080

jwt:
  secret: ${JWT_SECRET:413F4428472B4B6250655368566D5970337336763979244226452948404D6351}
  lifetime: ${JWT_LIFETIME:3600000}
  issuer: ${JWT_ISSUER:user_service}

## DB config
spring:
  application:
    name: user-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/ca-user?currentSchema=ca-user
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:1085}
  jpa:
    hibernate:
      ddl-auto: none
  flyway:
    enabled: true



## OpenApi config
springdoc:
  packagesToScan: org.brain.user_service.controller
  pathsToMatch:
    - /api/v1/auth/**
    - /api/v1/validation/**

## Monitoring
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s
        resource-attributes:
          "service.name": ${spring.application.name}
    tracing:
      endpoint: http://localhost:4318/v1/traces
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


## Eureka
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://eureka-server:8761/eureka}
    fetch-registry: true
    register-with-eureka: true

